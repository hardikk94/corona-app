{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/page-not-found404/page-not-found404.component.ts","webpack:///src/app/core/components/page-not-found404/page-not-found404.component.html","webpack:///src/app/core/components/toastr.component.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/providers/api.service.ts","webpack:///src/app/core/providers/auth.guard.service.ts","webpack:///src/app/core/providers/loader.service.ts","webpack:///src/app/core/providers/modal.service.ts","webpack:///src/app/core/providers/toast.service.ts","webpack:///src/app/store/actions/auth.action.ts","webpack:///src/app/store/actions/dashboard.action.ts","webpack:///src/app/store/actions/loading.action.ts","webpack:///src/app/store/actions/toast.action.ts","webpack:///src/app/store/effects/auth.effects.ts","webpack:///src/app/store/effects/dashboard.effect.ts","webpack:///src/app/store/providers/auth.service.ts","webpack:///src/app/store/reducers/app.reducer.ts","webpack:///src/app/store/reducers/auth.reducer.ts","webpack:///src/app/store/reducers/dashboard.reducer.ts","webpack:///src/app/store/reducers/loading.reducer.ts","webpack:///src/app/store/reducers/toast.reducer.ts","webpack:///src/app/store/stores/auth.store.ts","webpack:///src/app/store/stores/dashboard.store.ts","webpack:///src/app/store/utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","canActivate","loadChildren","m","AuthenticationModule","DashboardModule","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","store","loadingService","toastService","loadingText","toastSubscription","select","subscribe","toast","isToast","showToastMessage","type","title","message","dispatch","loadingSubscription","loading","isLoading","loadingShow","loadingHide","unsubscribe","selector","templateUrl","styleUrls","AppModule","instrument","maxAge","declarations","providers","bootstrap","PageNotFound404Component","ToastComponent","toastrService","toastPackage","undoString","event","stopPropagation","triggerAction","opacity","transform","template","animations","preserveWhitespaces","CoreModule","toastComponent","entryComponents","ApiService","http","apiURL","api_url","console","log","error","httpOptions","headers","params","get","pipe","handleError","body","isJson","put","setJsonDataHeaders","post","providedIn","AuthGuardService","authService","router","route","state","sessionStorage","getItem","navigate","LoaderService","spinner","show","hide","ModalService","modalService","componentname","size","modalRef","open","componentInstance","instance","_windowCmptRef","setTimeout","windowClass","ToastService","toastOptions","closeButton","progressBar","progressAnimation","titleClass","messageClass","maxOpened","positionClass","timeOut","success","info","warning","authActionTypes","LOGIN_REQUESTED","LOGIN_COMPLETED","AUTH_ERROR","LoginRequestedAction","payload","LoginCompletedAction","AuthErrorAction","dashboardActionTypes","LIST_REQUESTED","LIST_COMPLETED","LIST_DELETE_REQUESTED","LIST_DELETE_COMPLETED","LIST_ADD_REQUESTED","LIST_ADD_COMPLETED","LIST_UPDATED_REQUESTED","LIST_UPDATED_COMPLETED","LIST_ERROR","ListRequestedAction","ListCompletedAction","ListAddRequestedAction","ListAddCompletedAction","ListDeleteRequestedAction","ListDeleteCompletedAction","ListUpdateRequestedAction","ListUpdateCompletedAction","ListErrorAction","LoadingActionType","LOADING_SHOW_REQUESTED","LOADING_HIDE_REQUESTED","LOADING_RESET","LoadingShowRequested","LoadingHideRequested","LoadingResetRequested","ToastActionType","TOAST_SHOW_REQUESTED","TOAST_HIDE_REQUESTED","TOAST_RESET","ToastShowRequested","ToastHideRequested","ToastResetRequested","AuthEffects","actions$","loginAction$","toPayload","signIn","res","authResponse","userData","data","isLoggedIn","errorResponse","action","DashboardEffect","getNotes$","getList","dashboardResponse","list","length","slice","map","item","index","Math","floor","random","provinceState","name","combinedKey","AuthService","apiService","authData","email","password","authToken","today","formatDate","d","Date","month","getMonth","day","getDate","year","getFullYear","join","reducers","authInfo","toastInfo","loadingInfo","dashboardInfo","authInitalState","authReducer","Object","assign","listInitalState","dashboardReducer","note","findIndex","splice","LoadingInitialState","LoadingReducer","toastInitialState","ToastReducer","AuthStoreService","user","DashboardStoreService","typeCache","label","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { PageNotFound404Component } from \"./core/components/page-not-found404/page-not-found404.component\";\nimport { AuthGuardService } from \"./core/providers/auth.guard.service\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"/auth\",\n    pathMatch: \"full\",\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: \"auth\",\n    loadChildren: () =>import('./pages/authentication/authentication.module').then(m => m.AuthenticationModule)      \n  },\n  {\n    path: \"home\",\n    loadChildren: () =>import('./pages/dashboard/dashboard.module').then(m => m.DashboardModule),          \n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'not-found',\n    component: PageNotFound404Component,\n    pathMatch: \"full\"\n  },\n  {\n    path: \"**\",\n    redirectTo: \"not-found\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store'\nimport { AppState } from './store/states/app.state';\nimport { LoadingState } from './store/states/loading.state';\nimport { ToastState } from './store/states/toast.state';\nimport { LoaderService } from './core/providers/loader.service';\nimport { ToastService } from './core/providers/toast.service';\nimport { ToastHideRequested } from './store/actions/toast.action';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  public toastSubscription\n  public loadingSubscription\n  public loadingText = \"Loading...\"\n  constructor(\n    private store: Store<AppState>,\n    public loadingService: LoaderService,\n    public toastService: ToastService\n  ) {\n  }\n\n  public ngOnInit() {\n    // toast show and clear state\n    this.toastSubscription = this.store.select('toastInfo').subscribe((toast: ToastState) => {\n      if (toast.isToast) {\n        this.toastService.showToastMessage(toast.type, toast.title, toast.message)\n      }\n      else {\n        this.store.dispatch(new ToastHideRequested())\n      }\n    })\n\n    // loading show and hide with clear state\n    this.loadingSubscription = this.store.select('loadingInfo').subscribe((loading: LoadingState) => {\n      if (loading.isLoading) {\n        this.loadingText = loading.message\n        this.loadingService.loadingShow()\n      }\n      else {\n        this.loadingService.loadingHide()\n      }\n    })\n  }\n\n\n  public ngOnDestroy() {\n    if (this.toastSubscription) {\n      this.toastSubscription.unsubscribe()\n    }\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe()\n    }\n  }\n}\n","<ngx-spinner size=\"medium\" color=\"#87B074\" type=\"ball-spin-clockwise\" text=\"Loading...\">\n  <p style=\"font-size: 20px; color: white\">{{loadingText}}</p>\n</ngx-spinner>\n<div class=\"main__wrapper\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n// ngrx module\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from \"@ngrx/store\";\nimport { reducers } from './store/reducers/app.reducer'\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { AuthEffects } from './store/effects/auth.effects'\nimport { DashboardEffect } from './store/effects/dashboard.effect'\n\nimport { StoreRouterConnectingModule } from '@ngrx/router-store'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    StoreRouterConnectingModule.forRoot(),\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([AuthEffects,DashboardEffect]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n    }),\n    NgbModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  providers: [NgbActiveModal],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found404',\n  templateUrl: './page-not-found404.component.html',\n  styleUrls: ['./page-not-found404.component.scss']\n})\nexport class PageNotFound404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  page-not-found404 works!\n</p>\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { Component } from '@angular/core';\n\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <div [style.display]=\"state.value === 'inactive' ? 'none' : ''\">\n      <div class=\"upper-row\">\n          <div class=\"upper-title\">\n              <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n                  {{ title }}\n              </div>       \n          </div>\n\n          <div>\n              <a *ngIf=\"!options.closeButton\" class=\"btn btn-pink btn-sm\" (click)=\"action($event)\">\n                {{ undoString }}\n              </a>\n              <a *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"btn btn-pink btn-sm\">\n              close\n              </a>\n          </div>\n      </div>\n\n      <div class=\"down-row\">\n          <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n            [class]=\"options.messageClass\" [innerHTML]=\"message\">\n          </div>\n\n          <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n          [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n          {{ message }}\n          </div>\n      </div>\n\n    </div>\n    \n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n    `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        opacity: 0,\n      })),\n      transition('inactive => active', animate('1500ms ease-in', keyframes([\n        style({\n          transform: 'translate3d(100%, 0, 0) ',\n          opacity: 0,\n        }),\n        style({\n          opacity: 1,\n        }),\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'none',\n          opacity: 1,\n        }),\n      ]))),\n      transition('active => removed', animate('1500ms ease-out', keyframes([\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'translate3d(100%, 0, 0)',\n          opacity: 0,\n        }),\n      ]))),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class ToastComponent extends Toast {\n  // used for demo purposes\n  undoString = 'undo';\n\n  // constructor is only necessary when not using AoT\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n  ) {\n    super(toastrService, toastPackage);\n  }\n\n  action(event: Event) {\n    event.stopPropagation();\n    this.undoString = 'undid';\n    this.toastPackage.triggerAction();\n    return false;\n  }\n}","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr'\nimport { ToastComponent } from './components/toastr.component'\nimport { CommonModule } from '@angular/common'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PageNotFound404Component } from './components/page-not-found404/page-not-found404.component'\nimport { ToastService } from './providers/toast.service'\nimport { ApiService } from './providers/api.service';\nimport { AppRoutingModule } from './../app-routing.module';\nimport { AuthGuardService } from './providers/auth.guard.service'\nimport { AuthService } from './../store/providers/auth.service'\nimport { AuthStoreService } from './../store/stores/auth.store'\nimport { DashboardStoreService } from './../store/stores/dashboard.store'\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoaderService } from './providers/loader.service';\nimport { ModalService } from './providers/modal.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    declarations: [\n        ToastComponent,\n        PageNotFound404Component,        \n    ],\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ToastrModule.forRoot({\n            toastComponent: ToastComponent,\n        }),\n        AppRoutingModule,        \n        NgxSpinnerModule,\n        NgbModule\n    ],\n    exports: [\n        ToastComponent,\n        AppRoutingModule,\n        NgxSpinnerModule,     \n    ],\n    entryComponents: [ToastComponent],\n    providers: [        \n        ToastService,\n        ApiService,                \n        AuthGuardService,\n        AuthStoreService,\n        DashboardStoreService,\n        AuthService,\n        LoaderService,\n        ModalService,       \n    ],\n})\nexport class CoreModule {\n    constructor() {\n\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from './../../../environments/environment'\nimport { apiResponse } from './../models/api.response.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  public apiURL: string\n  constructor(public http: HttpClient) {\n    this.apiURL = environment.api_url;\n    console.log(\"api url on build\", this.apiURL)\n  }\n\n  /**\n   * handle error\n   * @param error \n   */\n  private handleError(error: HttpErrorResponse) {\n    return throwError(error.error.message);\n  };\n\n\n  /**\n   * setting a header for json data\n   */\n  private setJsonDataHeaders() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      })\n    };\n    return httpOptions.headers\n  }\n\n  /**\n   * get api (list)\n   * @param path  api url \n   * @param params req params data\n   */\n  get(path: string, params: HttpParams = new HttpParams()): Observable<apiResponse> {\n    return this.http.get<apiResponse>(`${environment.api_url}${path}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * put api call (update)\n   * @param path  api url\n   * @param body  req params data\n   * @param isJson is json data or not\n   */\n  put(path: string, body: Object = {}, isJson = true): Observable<apiResponse> {\n    return this.http.put<apiResponse>(`${environment.api_url}${path}`, body, { headers: this.setJsonDataHeaders() })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * post api call (add)\n   * @param path api url\n   * @param body request params\n   * @param isJson is json data or not\n   */\n  post(path: string, body: Object = {}, isJson = true): Observable<apiResponse> {\n    return this.http.post<apiResponse>(`${environment.api_url}${path}`, body, { headers: this.setJsonDataHeaders() })\n      .pipe(catchError(this.handleError));\n\n  }\n\n  /**\n   * delete api (delete data)\n   * @param path api url\n   */\n  delete(path): Observable<apiResponse> {\n    return this.http.delete<apiResponse>(`${environment.api_url}${path}`, { headers: this.setJsonDataHeaders() })\n      .pipe(catchError(this.handleError));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    public authService: ApiService,   \n    public router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (sessionStorage.getItem('authtoken')) {\n      console.log(\"comes gere\")\n      return true;\n    }\n    this.router.navigate(['auth']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoadingState } from './../../store/states/loading.state'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor(private spinner: NgxSpinnerService) { }\n\n  public loadingShow() {\n    this.spinner.show()\n  }\n\n  public loadingHide() {\n    this.spinner.hide()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(private modalService: NgbModal) { }\n\n  public openModal(componentname, title, message,size = \"lg\") {\n    const modalRef = this.modalService.open(componentname, { size: 'lg' });\n    modalRef.componentInstance.title = title;\n    modalRef.componentInstance.message = message;\n    const instance = (modalRef as any)._windowCmptRef.instance;\n    setTimeout(() => {\n      instance.windowClass += ' animate-end ';\n    }, 250)\n    return modalRef\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  public toastOptions: any = {\n    closeButton: true,\n    progressBar: false,\n    progressAnimation: \"increasing\",\n    titleClass:\"toast-title\",\n    messageClass:\"toast-message\",\n    maxOpened: 3\n  }\n  constructor(public toastrService: ToastrService) { }\n\n  public showToastMessage(type, title, message, positionClass = 'toast-top-right', timeOut = 5000) {    \n    this.toastOptions.positionClass = positionClass;\n    this.toastOptions.timeOut = timeOut\n    switch (type) {\n      case 'success': {\n        this.toastrService.success(message,title, this.toastOptions)        \n        break;\n      }\n\n      case 'info': {\n        this.toastrService.info(message,title,this.toastOptions)\n        break;\n      }\n\n      case 'error': {\n        this.toastrService.error(message,title,this.toastOptions)\n        break;\n      }\n\n      case 'warning': {\n        this.toastrService.warning(message,title,this.toastOptions)\n        break;\n      }\n\n      default: {\n        this.toastrService.info(message,title,this.toastOptions)\n        break;\n      }\n    }\n  }\n}\n\n\n","import { Action } from '@ngrx/store';\nimport { type } from '../utils';\nimport { AuthRequestState , AuthState} from './../states/auth.state';\n\nexport const authActionTypes = {\n    LOGIN_REQUESTED: type<string>(\"[Login] -Login Requested-\"),\n    LOGIN_COMPLETED: type<string>(\"[Login] -Login Completed-\"),    \n    AUTH_ERROR: type<string>(\"[Auth] - Auth Error-\"),\n}\n\nexport class LoginRequestedAction implements Action {\n    readonly type = authActionTypes.LOGIN_REQUESTED;\n    constructor(public payload: AuthRequestState) {\n    }\n}\n\nexport class LoginCompletedAction implements Action {\n    readonly type = authActionTypes.LOGIN_COMPLETED;\n    constructor(public payload: AuthState) {\n    }\n}\n\nexport class AuthErrorAction implements Action {\n    readonly type = authActionTypes.AUTH_ERROR;\n    constructor(public payload: any) {\n    }\n}\n\n\nexport type AuthAction = LoginRequestedAction | LoginCompletedAction | AuthErrorAction   ","import { Action } from '@ngrx/store';\nimport { type } from '../utils';\nimport { DashboardState } from './../states/dashboard.state';\n\nexport const dashboardActionTypes = {\n    LIST_REQUESTED: type<string>(\"[Dashboard] -List Requested-\"),\n    LIST_COMPLETED: type<string>(\"[Dashboard] -List Completed-\"),    \n    LIST_DELETE_REQUESTED: type<string>(\"[Dashboard] -List Delete Requested-\"),\n    LIST_DELETE_COMPLETED: type<string>(\"[Dashboard] -List Delete Completed-\"),    \n    LIST_ADD_REQUESTED: type<string>(\"[Dashboard] -List Add Requested-\"),\n    LIST_ADD_COMPLETED: type<string>(\"[Dashboard] -List Add Completed-\"),        \n    LIST_UPDATED_REQUESTED: type<string>(\"[Dashboard] -List Update Requested-\"),\n    LIST_UPDATED_COMPLETED: type<string>(\"[Dashboard] -List Update Completed-\"),\n    LIST_ERROR: type<string>(\"[Dashboard] - Auth Error-\"),\n}\n\nexport class ListRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\nexport class ListAddRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_ADD_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListAddCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_ADD_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\nexport class ListDeleteRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_DELETE_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListDeleteCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_DELETE_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\nexport class ListUpdateRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_UPDATED_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListUpdateCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_UPDATED_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListErrorAction implements Action {\n    readonly type = dashboardActionTypes.LIST_ERROR;\n    constructor(public payload: any) {\n    }\n}\n\n\nexport type DashboardAction = ListRequestedAction | ListCompletedAction | ListAddRequestedAction | ListAddCompletedAction \n|  ListDeleteRequestedAction | ListDeleteCompletedAction |   ListUpdateRequestedAction | ListUpdateCompletedAction | ListErrorAction","import { type } from '../utils';\nimport { Action } from '@ngrx/store';\nimport { LoadingState } from './../states/loading.state'\n\nexport const LoadingActionType = {\n    LOADING_SHOW_REQUESTED: type<string>(\"[Loader] -Loader show Requested-\"),\n    LOADING_HIDE_REQUESTED: type<string>(\"[Loader] -Loader hide Requested-\"),\n    LOADING_RESET: type<string>(\"[Loader] -Loader Loader Requested-\")\n}\n\nexport class LoadingShowRequested implements Action {\n    readonly type = LoadingActionType.LOADING_SHOW_REQUESTED\n    constructor(public payload: LoadingState) {\n    }\n}\n\nexport class LoadingHideRequested implements Action {\n    readonly type = LoadingActionType.LOADING_HIDE_REQUESTED\n    constructor(public payload = null) {\n    }\n}\n\nexport class LoadingResetRequested implements Action {\n    readonly type = LoadingActionType.LOADING_RESET\n    constructor(public payload = null) {\n    }\n}\n\nexport type LoadingAction = LoadingShowRequested | LoadingHideRequested | LoadingResetRequested","import { type } from '../utils';\nimport { Action } from '@ngrx/store';\nimport { ToastState } from '../states/toast.state';\n\nexport const ToastActionType = {\n    TOAST_SHOW_REQUESTED: type<string>(\"[Toast] -Toast show Requested-\"),\n    TOAST_HIDE_REQUESTED: type<string>(\"[Toast] -Toast hide Requested-\"),\n    TOAST_RESET: type<string>(\"[Toast] -Toast reset Requested-\")\n}\n\nexport class ToastShowRequested implements Action {\n    readonly type = ToastActionType.TOAST_SHOW_REQUESTED\n    constructor(public payload: ToastState) {\n    }\n}\n\nexport class ToastHideRequested implements Action {\n    readonly type = ToastActionType.TOAST_HIDE_REQUESTED\n    constructor(public payload = null) {\n    }\n}\n\nexport class ToastResetRequested implements Action {\n    readonly type = ToastActionType.TOAST_RESET\n    constructor(public payload = null) {\n    }\n}\n\nexport type ToastAction = ToastShowRequested | ToastHideRequested | ToastResetRequested","import { Injectable } from '@angular/core';\nimport { AuthService } from './../providers/auth.service'\nimport { ofType, Actions, Effect } from '@ngrx/effects';\nimport { from,Observable } from 'rxjs';\nimport { authActionTypes, AuthErrorAction, LoginCompletedAction } from './../actions/auth.action';\nimport { LoadingHideRequested } from './../actions/loading.action'\nimport { ToastShowRequested } from './../actions/toast.action'\nimport { AuthState, ResponseState } from '../states/auth.state';\nimport { LoadingState } from '../states/loading.state';\nimport { ToastState } from '../states/toast.state';\nimport { map,mergeMap , switchMap,catchError} from 'rxjs/operators';\n\n@Injectable()\nexport class AuthEffects {\n    constructor(\n        public authService: AuthService,\n        private actions$: Actions) {\n    }\n    @Effect()\n    loginAction$: Observable<any> = this.actions$\n        .pipe(\n            ofType(authActionTypes.LOGIN_REQUESTED),map(this.toPayload),\n            switchMap(payload => this.authService.signIn(payload)),\n            mergeMap((res: any) => {\n                console.log(\"res\",res)\n                let loading: LoadingState = { isLoading: false, message: null }\n                let toast: ToastState;\n                let authResponse: AuthState;\n                if (res.success) {\n                    toast = { type: 'success', message: res.message, title: 'SUCCESS', isToast: true }\n                    authResponse = { userData: res.data, isLoggedIn: true, success: res.success }\n                }\n                else {                    \n                    toast = { type: 'error', message: res.error, title: 'ERROR', isToast: true }\n                    authResponse = { userData: res.error, isLoggedIn: true, success: res.success, error: res.error }\n                }\n                return from([\n                    (new ToastShowRequested(toast)),\n                    (new LoadingHideRequested(loading)),\n                    (new LoginCompletedAction(authResponse))\n                ])\n            }),catchError(this.handleError))        \n\n\n    private handleError(error) {        \n        let loading: LoadingState = { isLoading: false, message: null }\n        let toast: ToastState = { type: 'error', message: error, title: 'ERROR', isToast: true }\n        let errorResponse: AuthState = {\n            success: 0,\n            isLoggedIn: false,\n            userData: {},\n            error: error\n        }\n        return from([\n            (new ToastShowRequested(toast)),\n            (new LoadingHideRequested(loading)),\n            (new AuthErrorAction(errorResponse))\n        ])\n    }\n\n\n    public toPayload(action) {\n        return action.payload\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './../providers/auth.service'\nimport { ofType, Actions, Effect } from '@ngrx/effects';\nimport { from, Observable } from 'rxjs';\nimport { dashboardActionTypes, ListCompletedAction, ListErrorAction } from './../actions/dashboard.action'\nimport { LoadingHideRequested } from './../actions/loading.action'\nimport { DashboardState } from '../states/dashboard.state';\nimport { LoadingState } from '../states/loading.state';\nimport { map, mergeMap, switchMap, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class DashboardEffect {\n    constructor(\n        public authService: AuthService,\n        private actions$: Actions) {\n    }\n    @Effect()\n    getNotes$: Observable<any> = this.actions$\n        .pipe(\n            ofType(dashboardActionTypes.LIST_REQUESTED), map(this.toPayload),\n            switchMap(payload => this.authService.getList(payload)),\n            mergeMap((res: any) => {\n                let loading: LoadingState = { isLoading: false, message: null }\n                let dashboardResponse: DashboardState;\n                let list = []\n                if (res && res.length > 0) {\n                    list = res.slice(0, 10)\n                    list = list.map((item, index) => {\n                        return {\n                            id: Math.floor(Math.random() * 100),\n                            title: item.provinceState,\n                            name: item.combinedKey\n                        }\n                    })\n                    dashboardResponse = { list }\n                }                \n                return from([\n                    (new LoadingHideRequested(loading)),\n                    (new ListCompletedAction(dashboardResponse))\n                ])\n            }), catchError(this.handleError))\n\n\n    private handleError(error) {\n        let loading: LoadingState = { isLoading: false, message: null }\n        let errorResponse: DashboardState = {\n            list: []\n        }\n        return from([\n            (new LoadingHideRequested(loading)),\n            (new ListErrorAction(errorResponse))\n        ])\n    }\n\n\n    public toPayload(action) {\n        return action.payload\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './../../core/providers/api.service'\nimport { of } from 'rxjs';\nimport { mapTo, delay } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    public apiService: ApiService\n  ) { }\n  public signIn(authData: any) {    \n    if (authData.email == \"covid19@gmail.com\" && authData.password == \"covid@123\") {\n      return of({\n        message: \"Successfully loggedin\",\n        success: true,\n        data: {\n          email: authData.email,\n          authToken: \"zstfwrefcdvqhabbzudchhckeqweloil\"\n        },\n\n      }).pipe(delay(3000))\n    }\n    else {      \n      return of({\n        message: \"User is not exist!\",\n        success: false,\n        error: \"User is not exist!\"\n      }).pipe(delay(3000))\n    }\n  }\n\n\n  public getList(authData: any) {    \n    let today = this.formatDate()\n    return this.apiService.get('daily/' + today)\n  }\n\n  public  formatDate() {\n    var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate() - 1),\n        year = d.getFullYear();   \n    return [month,day,year].join('-');\n}\n}\n\n\n\n","import { authReducer } from './auth.reducer'\nimport { ToastReducer } from './toast.reducer'\nimport { LoadingReducer } from './loading.reducer'\nimport { dashboardReducer } from './dashboard.reducer'\n\nexport const reducers = {\n    authInfo: authReducer,\n    toastInfo: ToastReducer,\n    loadingInfo: LoadingReducer,\n    dashboardInfo:dashboardReducer\n}","import { AuthState } from '../states/auth.state';\nimport { AuthAction, authActionTypes } from './../actions/auth.action'\n\n\nexport const authInitalState: AuthState = {\n    userData: null,\n    isLoggedIn: false,\n    success: null\n}\n\nexport function authReducer(state = authInitalState, action: AuthAction): AuthState {\n    switch (action.type) {\n        case authActionTypes.LOGIN_COMPLETED: {\n            return Object.assign({}, state, action.payload);\n        }        \n        default: {\n            return state;\n        }\n\n    }\n}\n","import { DashboardState } from '../states/dashboard.state';\nimport { dashboardActionTypes, DashboardAction } from './../actions/dashboard.action'\n\n\nexport const listInitalState: DashboardState = {\n    list: [],\n}\n\nexport function dashboardReducer(state = listInitalState, action: DashboardAction): DashboardState {\n    switch (action.type) {\n        case dashboardActionTypes.LIST_COMPLETED: {\n            return Object.assign({}, state, action.payload);\n        }\n        case dashboardActionTypes.LIST_ADD_REQUESTED: {\n            let id = Math.floor(Math.random() * 100)\n            let note = {\n                id,\n                ...action.payload\n            };                \n            let list = [note, ...state.list]\n            let data = {\n                list\n            }\n            return Object.assign({}, state, data);\n        }\n        case dashboardActionTypes.LIST_DELETE_REQUESTED: {\n            if (state.list && state.list.length > 0) {\n                let index = state.list.findIndex(item => item.id === action.payload.id)\n                if (index !== -1) {\n                    let list = [...state.list]\n                    list.splice(index, 1)\n                    let data = {\n                        list\n                    }\n                    return Object.assign({}, state, data);\n                }\n            }\n        }\n        case dashboardActionTypes.LIST_UPDATED_REQUESTED: {\n            return Object.assign({}, state, action.payload);\n        }\n        default: {\n            return state;\n        }\n\n    }\n}\n\n","import { LoadingState } from '../states/loading.state';\nimport { LoadingAction, LoadingActionType } from '../actions/loading.action';\n\nexport const LoadingInitialState: LoadingState = {\n    isLoading: false,\n    message: null,\n}\n\nexport function LoadingReducer(state = LoadingInitialState, action: LoadingAction): LoadingState {\n    switch (action.type) {\n        case LoadingActionType.LOADING_SHOW_REQUESTED:{\n            return Object.assign({}, state, action.payload);\n        }            \n        case LoadingActionType.LOADING_HIDE_REQUESTED:{\n            return LoadingInitialState;\n        }            \n        default:{            \n            return state;\n        }\n            \n    }\n}","import { ToastState } from '../states/toast.state';\nimport { ToastAction, ToastActionType } from '../actions/toast.action';\n\nexport const toastInitialState: ToastState = {\n    title: null,\n    message: null,\n    type: null,\n    isToast: false\n}\n\nexport function ToastReducer(state = toastInitialState, action: ToastAction): ToastState {\n    switch (action.type) {\n        case ToastActionType.TOAST_SHOW_REQUESTED:{            \n            return Object.assign({}, state, action.payload);\n        }            \n        case ToastActionType.TOAST_HIDE_REQUESTED:\n        case ToastActionType.TOAST_RESET:{\n            return toastInitialState;\n        }            \n        default:{\n            return state;\n        }\n            \n    }\n}","import { Injectable } from '@angular/core';\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from '../states/app.state';\nimport { LoginRequestedAction } from '../actions/auth.action';\n@Injectable()\nexport class AuthStoreService {    \n    constructor(private store: Store<AppState>) { }\n    public dispatchLoginAction(user) {\n        this.store.dispatch(new LoginRequestedAction(user))\n    }\n\n    public storeSelect() {\n        return this.store.select('authInfo')\n    }    \n}","import { Injectable } from '@angular/core';\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from '../states/app.state';\nimport { ListRequestedAction,ListAddRequestedAction,ListDeleteRequestedAction,ListUpdateRequestedAction } from '../actions/dashboard.action';\n@Injectable()\nexport class DashboardStoreService {    \n    constructor(private store: Store<AppState>) { }\n    public dispatchListAction(item) {\n        this.store.dispatch(new ListRequestedAction(item))\n    }\n    public dispatchListAddAction(item) {\n        this.store.dispatch(new ListAddRequestedAction(item))\n    }\n    public dispatchListDeleteAction(item) {\n        this.store.dispatch(new ListDeleteRequestedAction(item))\n    }\n    public dispatchListUpdateAction(item) {\n        this.store.dispatch(new ListUpdateRequestedAction(item))\n    }\n\n    public storeSelect() {\n        return this.store.select('dashboardInfo')\n    }    \n}","/**\n * This function coerces a string into a string literal type.\n * Using tagged union types in TypeScript 2.0, this enables\n * powerful typechecking of our reducers.\n *\n * Since every action label passes through this function it\n * is a good place to ensure all of our action labels\n * are unique.\n */\n\nconst typeCache:{ \n    [label: string]: boolean \n} = {};\n\nexport function type<T>(label: T | ''): T {\n    if (typeCache[<string>label]) {\n      throw new Error(`Action type \"${label}\" is not unique\"`);\n    }\n    typeCache[<string>label] = true;  \n    return <T>label;\n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url:'http://covid19.mathdro.id/api/',  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}