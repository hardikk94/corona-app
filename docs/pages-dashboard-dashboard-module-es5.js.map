{"version":3,"sources":["webpack:///src/app/pages/dashboard/components/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/components/dashboard/dashboard.component.html","webpack:///src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/pages/dashboard/dashboard.module.ts"],"names":["DashboardComponent","dashboardStoreServce","store","formBuilder","notes","listForm","group","title","required","name","loadingState","isLoading","message","dispatch","dispatchListAction","data","dashboadSubscriber","storeSelect","subscribe","response","list","console","log","unsubscribe","item","dispatchListDeleteAction","dispatchListAddAction","value","addList","selector","templateUrl","styleUrls","routes","path","children","component","DashboardRoutingModule","forChild","declarations","imports","DashboardModule"],"mappings":"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","file":"pages-dashboard-dashboard-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DashboardStoreService } from \"./../../../../store/stores/dashboard.store\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/app/store/states/app.state\";\nimport { LoadingShowRequested } from \"src/app/store/actions/loading.action\";\nimport { LoadingState } from \"src/app/store/states/loading.state\";\nimport { DashboardState } from \"src/app/store/states/dashboard.state\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  public dashboadSubscriber;\n  public listForm: FormGroup;\n  public notes: any = []\n  constructor(public dashboardStoreServce: DashboardStoreService,\n    private store: Store<AppState>, public formBuilder: FormBuilder) {\n    this.listForm = this.formBuilder.group({\n      title: [\"\", [Validators.required]],\n      name: [\"\", [Validators.required]]\n    });\n\n\n    let loadingState: LoadingState = {\n      isLoading: true,\n      message: \"Fetching...\"\n    };\n    this.store.dispatch(new LoadingShowRequested(loadingState));\n    this.dashboardStoreServce.dispatchListAction({ data: \"1\" });\n\n  }\n\n  ngOnInit() {\n    this.dashboadSubscriber = this.dashboardStoreServce\n      .storeSelect()\n      .subscribe((response: DashboardState) => {\n        this.notes = response.list\n        console.log(\"this.notes\", this.notes)\n      });\n  }\n\n  public ngOnDestroy() {\n    if (this.dashboadSubscriber) {\n      this.dashboadSubscriber.unsubscribe();\n    }\n  }\n\n  public deleteList(item) {\n    this.dashboardStoreServce.dispatchListDeleteAction(item)\n  }\n  public addList() {\n    this.dashboardStoreServce.dispatchListAddAction(this.listForm.value)\n  }\n\n  public testhere() {\n    console.log(\"testhere\", this.listForm)\n  }\n\n\n\n}\n","<div class=\"Dashboard-main-contant-row\">\n    <div class=\"container-fluid\">\n        <div class=\"notes-wrapper\">\n            <div class=\"row\">\n                <span class=\"g-title\">G notes</span>\n\n            </div>\n            <div class=\"row justify-content-md-center\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col col-lg-4 col-md-12 col-xs-12 leftside\">\n                            <div class=\"list_wrapper\" *ngFor=\"let note of notes\">\n\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <h5 class=\"card-title\">{{note.title}}</h5>\n                                        <p class=\"card-text\">{{note.name}}</p>\n                                        <a href=\"javascript:;\" class=\"card-link note_lnk\"\n                                            (click)=\"deleteList(note)\">Delete</a>                                      \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col col-lg-8 col-md-12 col-xs-12 rightside add_form_wrapper\">\n                            <form [formGroup]=\"listForm\" (ngSubmit)=\"addList()\">\n                                <div class=\"row btn_wrapper\">\n                                    <button type=\"submit\" class=\"btn btn-success btn-sm note_add_btn\"\n                                        [disabled]=\"!listForm.valid\">Add Note</button>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"title\">Title</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"title\"\n                                        formControlName=\"title\" name=\"title\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"name\">describe here</label>\n                                    <textarea type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\"\n                                        id=\"name\" rows=\"3\"></textarea>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes,RouterModule } from '@angular/router'\nimport { DashboardComponent } from './components/dashboard/dashboard.component'\n\n\nexport const routes:Routes =[{\n  path:'',  \n  children:[{\n    path:'',\n    component:DashboardComponent,\n  }]\n}]\n\n@NgModule({\n  declarations: [],\n  imports: [  \n    RouterModule.forChild(routes)  \n  ]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [        \n    DashboardRoutingModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DashboardModule { }\n"]}