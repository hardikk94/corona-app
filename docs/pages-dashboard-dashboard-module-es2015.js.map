{"version":3,"sources":["./src/app/pages/dashboard/components/dashboard/dashboard.component.ts","./src/app/pages/dashboard/components/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard-routing.module.ts","./src/app/pages/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"pages-dashboard-dashboard-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DashboardStoreService } from \"./../../../../store/stores/dashboard.store\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"src/app/store/states/app.state\";\nimport { LoadingShowRequested } from \"src/app/store/actions/loading.action\";\nimport { LoadingState } from \"src/app/store/states/loading.state\";\nimport { DashboardState } from \"src/app/store/states/dashboard.state\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  public dashboadSubscriber;\n  public listForm: FormGroup;\n  public notes: any = []\n  constructor(public dashboardStoreServce: DashboardStoreService,\n    private store: Store<AppState>, public formBuilder: FormBuilder) {\n    this.listForm = this.formBuilder.group({\n      title: [\"\", [Validators.required]],\n      name: [\"\", [Validators.required]]\n    });\n\n\n    let loadingState: LoadingState = {\n      isLoading: true,\n      message: \"Fetching...\"\n    };\n    this.store.dispatch(new LoadingShowRequested(loadingState));\n    this.dashboardStoreServce.dispatchListAction({ data: \"1\" });\n\n  }\n\n  ngOnInit() {\n    this.dashboadSubscriber = this.dashboardStoreServce\n      .storeSelect()\n      .subscribe((response: DashboardState) => {\n        this.notes = response.list\n        console.log(\"this.notes\", this.notes)\n      });\n  }\n\n  public ngOnDestroy() {\n    if (this.dashboadSubscriber) {\n      this.dashboadSubscriber.unsubscribe();\n    }\n  }\n\n  public deleteList(item) {\n    this.dashboardStoreServce.dispatchListDeleteAction(item)\n  }\n  public addList() {\n    this.dashboardStoreServce.dispatchListAddAction(this.listForm.value)\n  }\n\n  public testhere() {\n    console.log(\"testhere\", this.listForm)\n  }\n\n\n\n}\n","<div class=\"Dashboard-main-contant-row\">\n    <div class=\"container-fluid\">\n        <div class=\"notes-wrapper\">\n            <div class=\"row\">\n                <span class=\"g-title\">G notes</span>\n\n            </div>\n            <div class=\"row justify-content-md-center\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col col-lg-4 col-md-12 col-xs-12 leftside\">\n                            <div class=\"list_wrapper\" *ngFor=\"let note of notes\">\n\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <h5 class=\"card-title\">{{note.title}}</h5>\n                                        <p class=\"card-text\">{{note.name}}</p>\n                                        <a href=\"javascript:;\" class=\"card-link note_lnk\"\n                                            (click)=\"deleteList(note)\">Delete</a>                                      \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col col-lg-8 col-md-12 col-xs-12 rightside add_form_wrapper\">\n                            <form [formGroup]=\"listForm\" (ngSubmit)=\"addList()\">\n                                <div class=\"row btn_wrapper\">\n                                    <button type=\"submit\" class=\"btn btn-success btn-sm note_add_btn\"\n                                        [disabled]=\"!listForm.valid\">Add Note</button>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"title\">Title</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"title\"\n                                        formControlName=\"title\" name=\"title\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"name\">describe here</label>\n                                    <textarea type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\"\n                                        id=\"name\" rows=\"3\"></textarea>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes,RouterModule } from '@angular/router'\nimport { DashboardComponent } from './components/dashboard/dashboard.component'\n\n\nexport const routes:Routes =[{\n  path:'',  \n  children:[{\n    path:'',\n    component:DashboardComponent,\n  }]\n}]\n\n@NgModule({\n  declarations: [],\n  imports: [  \n    RouterModule.forChild(routes)  \n  ]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [        \n    DashboardRoutingModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}