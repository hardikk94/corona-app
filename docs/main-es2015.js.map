{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/page-not-found404/page-not-found404.component.ts","./src/app/core/components/page-not-found404/page-not-found404.component.html","./src/app/core/components/toastr.component.ts","./src/app/core/core.module.ts","./src/app/core/providers/api.service.ts","./src/app/core/providers/auth.guard.service.ts","./src/app/core/providers/loader.service.ts","./src/app/core/providers/modal.service.ts","./src/app/core/providers/toast.service.ts","./src/app/store/actions/auth.action.ts","./src/app/store/actions/dashboard.action.ts","./src/app/store/actions/loading.action.ts","./src/app/store/actions/toast.action.ts","./src/app/store/effects/auth.effects.ts","./src/app/store/effects/dashboard.effect.ts","./src/app/store/providers/auth.service.ts","./src/app/store/reducers/app.reducer.ts","./src/app/store/reducers/auth.reducer.ts","./src/app/store/reducers/dashboard.reducer.ts","./src/app/store/reducers/loading.reducer.ts","./src/app/store/reducers/toast.reducer.ts","./src/app/store/stores/auth.store.ts","./src/app/store/stores/dashboard.store.ts","./src/app/store/utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { PageNotFound404Component } from \"./core/components/page-not-found404/page-not-found404.component\";\nimport { AuthGuardService } from \"./core/providers/auth.guard.service\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"/auth\",\n    pathMatch: \"full\",\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: \"auth\",\n    loadChildren: () =>import('./pages/authentication/authentication.module').then(m => m.AuthenticationModule)      \n  },\n  {\n    path: \"home\",\n    loadChildren: () =>import('./pages/dashboard/dashboard.module').then(m => m.DashboardModule),          \n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'not-found',\n    component: PageNotFound404Component,\n    pathMatch: \"full\"\n  },\n  {\n    path: \"**\",\n    redirectTo: \"not-found\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store'\nimport { AppState } from './store/states/app.state';\nimport { LoadingState } from './store/states/loading.state';\nimport { ToastState } from './store/states/toast.state';\nimport { LoaderService } from './core/providers/loader.service';\nimport { ToastService } from './core/providers/toast.service';\nimport { ToastHideRequested } from './store/actions/toast.action';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  public toastSubscription\n  public loadingSubscription\n  public loadingText = \"Loading...\"\n  constructor(\n    private store: Store<AppState>,\n    public loadingService: LoaderService,\n    public toastService: ToastService\n  ) {\n  }\n\n  public ngOnInit() {\n    // toast show and clear state\n    this.toastSubscription = this.store.select('toastInfo').subscribe((toast: ToastState) => {\n      if (toast.isToast) {\n        this.toastService.showToastMessage(toast.type, toast.title, toast.message)\n      }\n      else {\n        this.store.dispatch(new ToastHideRequested())\n      }\n    })\n\n    // loading show and hide with clear state\n    this.loadingSubscription = this.store.select('loadingInfo').subscribe((loading: LoadingState) => {\n      if (loading.isLoading) {\n        this.loadingText = loading.message\n        this.loadingService.loadingShow()\n      }\n      else {\n        this.loadingService.loadingHide()\n      }\n    })\n  }\n\n\n  public ngOnDestroy() {\n    if (this.toastSubscription) {\n      this.toastSubscription.unsubscribe()\n    }\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe()\n    }\n  }\n}\n","<ngx-spinner size=\"medium\" color=\"#87B074\" type=\"ball-spin-clockwise\" text=\"Loading...\">\n  <p style=\"font-size: 20px; color: white\">{{loadingText}}</p>\n</ngx-spinner>\n<div class=\"main__wrapper\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n// ngrx module\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from \"@ngrx/store\";\nimport { reducers } from './store/reducers/app.reducer'\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { AuthEffects } from './store/effects/auth.effects'\nimport { DashboardEffect } from './store/effects/dashboard.effect'\n\nimport { StoreRouterConnectingModule } from '@ngrx/router-store'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    StoreRouterConnectingModule.forRoot(),\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([AuthEffects,DashboardEffect]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n    }),\n    NgbModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  providers: [NgbActiveModal],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found404',\n  templateUrl: './page-not-found404.component.html',\n  styleUrls: ['./page-not-found404.component.scss']\n})\nexport class PageNotFound404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  page-not-found404 works!\n</p>\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { Component } from '@angular/core';\n\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <div [style.display]=\"state.value === 'inactive' ? 'none' : ''\">\n      <div class=\"upper-row\">\n          <div class=\"upper-title\">\n              <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n                  {{ title }}\n              </div>       \n          </div>\n\n          <div>\n              <a *ngIf=\"!options.closeButton\" class=\"btn btn-pink btn-sm\" (click)=\"action($event)\">\n                {{ undoString }}\n              </a>\n              <a *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"btn btn-pink btn-sm\">\n              close\n              </a>\n          </div>\n      </div>\n\n      <div class=\"down-row\">\n          <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n            [class]=\"options.messageClass\" [innerHTML]=\"message\">\n          </div>\n\n          <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n          [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n          {{ message }}\n          </div>\n      </div>\n\n    </div>\n    \n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n    `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        opacity: 0,\n      })),\n      transition('inactive => active', animate('1500ms ease-in', keyframes([\n        style({\n          transform: 'translate3d(100%, 0, 0) ',\n          opacity: 0,\n        }),\n        style({\n          opacity: 1,\n        }),\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'none',\n          opacity: 1,\n        }),\n      ]))),\n      transition('active => removed', animate('1500ms ease-out', keyframes([\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'translate3d(100%, 0, 0)',\n          opacity: 0,\n        }),\n      ]))),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class ToastComponent extends Toast {\n  // used for demo purposes\n  undoString = 'undo';\n\n  // constructor is only necessary when not using AoT\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n  ) {\n    super(toastrService, toastPackage);\n  }\n\n  action(event: Event) {\n    event.stopPropagation();\n    this.undoString = 'undid';\n    this.toastPackage.triggerAction();\n    return false;\n  }\n}","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr'\nimport { ToastComponent } from './components/toastr.component'\nimport { CommonModule } from '@angular/common'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PageNotFound404Component } from './components/page-not-found404/page-not-found404.component'\nimport { ToastService } from './providers/toast.service'\nimport { ApiService } from './providers/api.service';\nimport { AppRoutingModule } from './../app-routing.module';\nimport { AuthGuardService } from './providers/auth.guard.service'\nimport { AuthService } from './../store/providers/auth.service'\nimport { AuthStoreService } from './../store/stores/auth.store'\nimport { DashboardStoreService } from './../store/stores/dashboard.store'\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoaderService } from './providers/loader.service';\nimport { ModalService } from './providers/modal.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    declarations: [\n        ToastComponent,\n        PageNotFound404Component,        \n    ],\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ToastrModule.forRoot({\n            toastComponent: ToastComponent,\n        }),\n        AppRoutingModule,        \n        NgxSpinnerModule,\n        NgbModule\n    ],\n    exports: [\n        ToastComponent,\n        AppRoutingModule,\n        NgxSpinnerModule,     \n    ],\n    entryComponents: [ToastComponent],\n    providers: [        \n        ToastService,\n        ApiService,                \n        AuthGuardService,\n        AuthStoreService,\n        DashboardStoreService,\n        AuthService,\n        LoaderService,\n        ModalService,       \n    ],\n})\nexport class CoreModule {\n    constructor() {\n\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from './../../../environments/environment'\nimport { apiResponse } from './../models/api.response.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  public apiURL: string\n  constructor(public http: HttpClient) {\n    this.apiURL = environment.api_url;\n    console.log(\"api url on build\", this.apiURL)\n  }\n\n  /**\n   * handle error\n   * @param error \n   */\n  private handleError(error: HttpErrorResponse) {\n    return throwError(error.error.message);\n  };\n\n\n  /**\n   * setting a header for json data\n   */\n  private setJsonDataHeaders() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      })\n    };\n    return httpOptions.headers\n  }\n\n  /**\n   * get api (list)\n   * @param path  api url \n   * @param params req params data\n   */\n  get(path: string, params: HttpParams = new HttpParams()): Observable<apiResponse> {\n    return this.http.get<apiResponse>(`${environment.api_url}${path}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * put api call (update)\n   * @param path  api url\n   * @param body  req params data\n   * @param isJson is json data or not\n   */\n  put(path: string, body: Object = {}, isJson = true): Observable<apiResponse> {\n    return this.http.put<apiResponse>(`${environment.api_url}${path}`, body, { headers: this.setJsonDataHeaders() })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * post api call (add)\n   * @param path api url\n   * @param body request params\n   * @param isJson is json data or not\n   */\n  post(path: string, body: Object = {}, isJson = true): Observable<apiResponse> {\n    return this.http.post<apiResponse>(`${environment.api_url}${path}`, body, { headers: this.setJsonDataHeaders() })\n      .pipe(catchError(this.handleError));\n\n  }\n\n  /**\n   * delete api (delete data)\n   * @param path api url\n   */\n  delete(path): Observable<apiResponse> {\n    return this.http.delete<apiResponse>(`${environment.api_url}${path}`, { headers: this.setJsonDataHeaders() })\n      .pipe(catchError(this.handleError));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    public authService: ApiService,   \n    public router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (sessionStorage.getItem('authtoken')) {\n      console.log(\"comes gere\")\n      return true;\n    }\n    this.router.navigate(['auth']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LoadingState } from './../../store/states/loading.state'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor(private spinner: NgxSpinnerService) { }\n\n  public loadingShow() {\n    this.spinner.show()\n  }\n\n  public loadingHide() {\n    this.spinner.hide()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(private modalService: NgbModal) { }\n\n  public openModal(componentname, title, message,size = \"lg\") {\n    const modalRef = this.modalService.open(componentname, { size: 'lg' });\n    modalRef.componentInstance.title = title;\n    modalRef.componentInstance.message = message;\n    const instance = (modalRef as any)._windowCmptRef.instance;\n    setTimeout(() => {\n      instance.windowClass += ' animate-end ';\n    }, 250)\n    return modalRef\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  public toastOptions: any = {\n    closeButton: true,\n    progressBar: false,\n    progressAnimation: \"increasing\",\n    titleClass:\"toast-title\",\n    messageClass:\"toast-message\",\n    maxOpened: 3\n  }\n  constructor(public toastrService: ToastrService) { }\n\n  public showToastMessage(type, title, message, positionClass = 'toast-top-right', timeOut = 5000) {    \n    this.toastOptions.positionClass = positionClass;\n    this.toastOptions.timeOut = timeOut\n    switch (type) {\n      case 'success': {\n        this.toastrService.success(message,title, this.toastOptions)        \n        break;\n      }\n\n      case 'info': {\n        this.toastrService.info(message,title,this.toastOptions)\n        break;\n      }\n\n      case 'error': {\n        this.toastrService.error(message,title,this.toastOptions)\n        break;\n      }\n\n      case 'warning': {\n        this.toastrService.warning(message,title,this.toastOptions)\n        break;\n      }\n\n      default: {\n        this.toastrService.info(message,title,this.toastOptions)\n        break;\n      }\n    }\n  }\n}\n\n\n","import { Action } from '@ngrx/store';\nimport { type } from '../utils';\nimport { AuthRequestState , AuthState} from './../states/auth.state';\n\nexport const authActionTypes = {\n    LOGIN_REQUESTED: type<string>(\"[Login] -Login Requested-\"),\n    LOGIN_COMPLETED: type<string>(\"[Login] -Login Completed-\"),    \n    AUTH_ERROR: type<string>(\"[Auth] - Auth Error-\"),\n}\n\nexport class LoginRequestedAction implements Action {\n    readonly type = authActionTypes.LOGIN_REQUESTED;\n    constructor(public payload: AuthRequestState) {\n    }\n}\n\nexport class LoginCompletedAction implements Action {\n    readonly type = authActionTypes.LOGIN_COMPLETED;\n    constructor(public payload: AuthState) {\n    }\n}\n\nexport class AuthErrorAction implements Action {\n    readonly type = authActionTypes.AUTH_ERROR;\n    constructor(public payload: any) {\n    }\n}\n\n\nexport type AuthAction = LoginRequestedAction | LoginCompletedAction | AuthErrorAction   ","import { Action } from '@ngrx/store';\nimport { type } from '../utils';\nimport { DashboardState } from './../states/dashboard.state';\n\nexport const dashboardActionTypes = {\n    LIST_REQUESTED: type<string>(\"[Dashboard] -List Requested-\"),\n    LIST_COMPLETED: type<string>(\"[Dashboard] -List Completed-\"),    \n    LIST_DELETE_REQUESTED: type<string>(\"[Dashboard] -List Delete Requested-\"),\n    LIST_DELETE_COMPLETED: type<string>(\"[Dashboard] -List Delete Completed-\"),    \n    LIST_ADD_REQUESTED: type<string>(\"[Dashboard] -List Add Requested-\"),\n    LIST_ADD_COMPLETED: type<string>(\"[Dashboard] -List Add Completed-\"),        \n    LIST_UPDATED_REQUESTED: type<string>(\"[Dashboard] -List Update Requested-\"),\n    LIST_UPDATED_COMPLETED: type<string>(\"[Dashboard] -List Update Completed-\"),\n    LIST_ERROR: type<string>(\"[Dashboard] - Auth Error-\"),\n}\n\nexport class ListRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\nexport class ListAddRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_ADD_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListAddCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_ADD_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\nexport class ListDeleteRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_DELETE_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListDeleteCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_DELETE_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\nexport class ListUpdateRequestedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_UPDATED_REQUESTED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListUpdateCompletedAction implements Action {\n    readonly type = dashboardActionTypes.LIST_UPDATED_COMPLETED;\n    constructor(public payload: any) {\n    }\n}\n\nexport class ListErrorAction implements Action {\n    readonly type = dashboardActionTypes.LIST_ERROR;\n    constructor(public payload: any) {\n    }\n}\n\n\nexport type DashboardAction = ListRequestedAction | ListCompletedAction | ListAddRequestedAction | ListAddCompletedAction \n|  ListDeleteRequestedAction | ListDeleteCompletedAction |   ListUpdateRequestedAction | ListUpdateCompletedAction | ListErrorAction","import { type } from '../utils';\nimport { Action } from '@ngrx/store';\nimport { LoadingState } from './../states/loading.state'\n\nexport const LoadingActionType = {\n    LOADING_SHOW_REQUESTED: type<string>(\"[Loader] -Loader show Requested-\"),\n    LOADING_HIDE_REQUESTED: type<string>(\"[Loader] -Loader hide Requested-\"),\n    LOADING_RESET: type<string>(\"[Loader] -Loader Loader Requested-\")\n}\n\nexport class LoadingShowRequested implements Action {\n    readonly type = LoadingActionType.LOADING_SHOW_REQUESTED\n    constructor(public payload: LoadingState) {\n    }\n}\n\nexport class LoadingHideRequested implements Action {\n    readonly type = LoadingActionType.LOADING_HIDE_REQUESTED\n    constructor(public payload = null) {\n    }\n}\n\nexport class LoadingResetRequested implements Action {\n    readonly type = LoadingActionType.LOADING_RESET\n    constructor(public payload = null) {\n    }\n}\n\nexport type LoadingAction = LoadingShowRequested | LoadingHideRequested | LoadingResetRequested","import { type } from '../utils';\nimport { Action } from '@ngrx/store';\nimport { ToastState } from '../states/toast.state';\n\nexport const ToastActionType = {\n    TOAST_SHOW_REQUESTED: type<string>(\"[Toast] -Toast show Requested-\"),\n    TOAST_HIDE_REQUESTED: type<string>(\"[Toast] -Toast hide Requested-\"),\n    TOAST_RESET: type<string>(\"[Toast] -Toast reset Requested-\")\n}\n\nexport class ToastShowRequested implements Action {\n    readonly type = ToastActionType.TOAST_SHOW_REQUESTED\n    constructor(public payload: ToastState) {\n    }\n}\n\nexport class ToastHideRequested implements Action {\n    readonly type = ToastActionType.TOAST_HIDE_REQUESTED\n    constructor(public payload = null) {\n    }\n}\n\nexport class ToastResetRequested implements Action {\n    readonly type = ToastActionType.TOAST_RESET\n    constructor(public payload = null) {\n    }\n}\n\nexport type ToastAction = ToastShowRequested | ToastHideRequested | ToastResetRequested","import { Injectable } from '@angular/core';\nimport { AuthService } from './../providers/auth.service'\nimport { ofType, Actions, Effect } from '@ngrx/effects';\nimport { from,Observable } from 'rxjs';\nimport { authActionTypes, AuthErrorAction, LoginCompletedAction } from './../actions/auth.action';\nimport { LoadingHideRequested } from './../actions/loading.action'\nimport { ToastShowRequested } from './../actions/toast.action'\nimport { AuthState, ResponseState } from '../states/auth.state';\nimport { LoadingState } from '../states/loading.state';\nimport { ToastState } from '../states/toast.state';\nimport { map,mergeMap , switchMap,catchError} from 'rxjs/operators';\n\n@Injectable()\nexport class AuthEffects {\n    constructor(\n        public authService: AuthService,\n        private actions$: Actions) {\n    }\n    @Effect()\n    loginAction$: Observable<any> = this.actions$\n        .pipe(\n            ofType(authActionTypes.LOGIN_REQUESTED),map(this.toPayload),\n            switchMap(payload => this.authService.signIn(payload)),\n            mergeMap((res: any) => {\n                console.log(\"res\",res)\n                let loading: LoadingState = { isLoading: false, message: null }\n                let toast: ToastState;\n                let authResponse: AuthState;\n                if (res.success) {\n                    toast = { type: 'success', message: res.message, title: 'SUCCESS', isToast: true }\n                    authResponse = { userData: res.data, isLoggedIn: true, success: res.success }\n                }\n                else {                    \n                    toast = { type: 'error', message: res.error, title: 'ERROR', isToast: true }\n                    authResponse = { userData: res.error, isLoggedIn: true, success: res.success, error: res.error }\n                }\n                return from([\n                    (new ToastShowRequested(toast)),\n                    (new LoadingHideRequested(loading)),\n                    (new LoginCompletedAction(authResponse))\n                ])\n            }),catchError(this.handleError))        \n\n\n    private handleError(error) {        \n        let loading: LoadingState = { isLoading: false, message: null }\n        let toast: ToastState = { type: 'error', message: error, title: 'ERROR', isToast: true }\n        let errorResponse: AuthState = {\n            success: 0,\n            isLoggedIn: false,\n            userData: {},\n            error: error\n        }\n        return from([\n            (new ToastShowRequested(toast)),\n            (new LoadingHideRequested(loading)),\n            (new AuthErrorAction(errorResponse))\n        ])\n    }\n\n\n    public toPayload(action) {\n        return action.payload\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './../providers/auth.service'\nimport { ofType, Actions, Effect } from '@ngrx/effects';\nimport { from, Observable } from 'rxjs';\nimport { dashboardActionTypes, ListCompletedAction, ListErrorAction } from './../actions/dashboard.action'\nimport { LoadingHideRequested } from './../actions/loading.action'\nimport { DashboardState } from '../states/dashboard.state';\nimport { LoadingState } from '../states/loading.state';\nimport { map, mergeMap, switchMap, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class DashboardEffect {\n    constructor(\n        public authService: AuthService,\n        private actions$: Actions) {\n    }\n    @Effect()\n    getNotes$: Observable<any> = this.actions$\n        .pipe(\n            ofType(dashboardActionTypes.LIST_REQUESTED), map(this.toPayload),\n            switchMap(payload => this.authService.getList(payload)),\n            mergeMap((res: any) => {\n                let loading: LoadingState = { isLoading: false, message: null }\n                let dashboardResponse: DashboardState;\n                let list = []\n                if (res && res.length > 0) {\n                    list = res.slice(0, 10)\n                    list = list.map((item, index) => {\n                        return {\n                            id: Math.floor(Math.random() * 100),\n                            title: item.provinceState,\n                            name: item.combinedKey\n                        }\n                    })\n                    dashboardResponse = { list }\n                }                \n                return from([\n                    (new LoadingHideRequested(loading)),\n                    (new ListCompletedAction(dashboardResponse))\n                ])\n            }), catchError(this.handleError))\n\n\n    private handleError(error) {\n        let loading: LoadingState = { isLoading: false, message: null }\n        let errorResponse: DashboardState = {\n            list: []\n        }\n        return from([\n            (new LoadingHideRequested(loading)),\n            (new ListErrorAction(errorResponse))\n        ])\n    }\n\n\n    public toPayload(action) {\n        return action.payload\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './../../core/providers/api.service'\nimport { of } from 'rxjs';\nimport { mapTo, delay } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    public apiService: ApiService\n  ) { }\n  public signIn(authData: any) {    \n    if (authData.email == \"covid19@gmail.com\" && authData.password == \"covid@123\") {\n      return of({\n        message: \"Successfully loggedin\",\n        success: true,\n        data: {\n          email: authData.email,\n          authToken: \"zstfwrefcdvqhabbzudchhckeqweloil\"\n        },\n\n      }).pipe(delay(3000))\n    }\n    else {      \n      return of({\n        message: \"User is not exist!\",\n        success: false,\n        error: \"User is not exist!\"\n      }).pipe(delay(3000))\n    }\n  }\n\n\n  public getList(authData: any) {    \n    let today = this.formatDate()\n    return this.apiService.get('daily/' + today)\n  }\n\n  public  formatDate() {\n    var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate() - 1),\n        year = d.getFullYear();   \n    return [month,day,year].join('-');\n}\n}\n\n\n\n","import { authReducer } from './auth.reducer'\nimport { ToastReducer } from './toast.reducer'\nimport { LoadingReducer } from './loading.reducer'\nimport { dashboardReducer } from './dashboard.reducer'\n\nexport const reducers = {\n    authInfo: authReducer,\n    toastInfo: ToastReducer,\n    loadingInfo: LoadingReducer,\n    dashboardInfo:dashboardReducer\n}","import { AuthState } from '../states/auth.state';\nimport { AuthAction, authActionTypes } from './../actions/auth.action'\n\n\nexport const authInitalState: AuthState = {\n    userData: null,\n    isLoggedIn: false,\n    success: null\n}\n\nexport function authReducer(state = authInitalState, action: AuthAction): AuthState {\n    switch (action.type) {\n        case authActionTypes.LOGIN_COMPLETED: {\n            return Object.assign({}, state, action.payload);\n        }        \n        default: {\n            return state;\n        }\n\n    }\n}\n","import { DashboardState } from '../states/dashboard.state';\nimport { dashboardActionTypes, DashboardAction } from './../actions/dashboard.action'\n\n\nexport const listInitalState: DashboardState = {\n    list: [],\n}\n\nexport function dashboardReducer(state = listInitalState, action: DashboardAction): DashboardState {\n    switch (action.type) {\n        case dashboardActionTypes.LIST_COMPLETED: {\n            return Object.assign({}, state, action.payload);\n        }\n        case dashboardActionTypes.LIST_ADD_REQUESTED: {\n            let id = Math.floor(Math.random() * 100)\n            let note = {\n                id,\n                ...action.payload\n            };                \n            let list = [note, ...state.list]\n            let data = {\n                list\n            }\n            return Object.assign({}, state, data);\n        }\n        case dashboardActionTypes.LIST_DELETE_REQUESTED: {\n            if (state.list && state.list.length > 0) {\n                let index = state.list.findIndex(item => item.id === action.payload.id)\n                if (index !== -1) {\n                    let list = [...state.list]\n                    list.splice(index, 1)\n                    let data = {\n                        list\n                    }\n                    return Object.assign({}, state, data);\n                }\n            }\n        }\n        case dashboardActionTypes.LIST_UPDATED_REQUESTED: {\n            return Object.assign({}, state, action.payload);\n        }\n        default: {\n            return state;\n        }\n\n    }\n}\n\n","import { LoadingState } from '../states/loading.state';\nimport { LoadingAction, LoadingActionType } from '../actions/loading.action';\n\nexport const LoadingInitialState: LoadingState = {\n    isLoading: false,\n    message: null,\n}\n\nexport function LoadingReducer(state = LoadingInitialState, action: LoadingAction): LoadingState {\n    switch (action.type) {\n        case LoadingActionType.LOADING_SHOW_REQUESTED:{\n            return Object.assign({}, state, action.payload);\n        }            \n        case LoadingActionType.LOADING_HIDE_REQUESTED:{\n            return LoadingInitialState;\n        }            \n        default:{            \n            return state;\n        }\n            \n    }\n}","import { ToastState } from '../states/toast.state';\nimport { ToastAction, ToastActionType } from '../actions/toast.action';\n\nexport const toastInitialState: ToastState = {\n    title: null,\n    message: null,\n    type: null,\n    isToast: false\n}\n\nexport function ToastReducer(state = toastInitialState, action: ToastAction): ToastState {\n    switch (action.type) {\n        case ToastActionType.TOAST_SHOW_REQUESTED:{            \n            return Object.assign({}, state, action.payload);\n        }            \n        case ToastActionType.TOAST_HIDE_REQUESTED:\n        case ToastActionType.TOAST_RESET:{\n            return toastInitialState;\n        }            \n        default:{\n            return state;\n        }\n            \n    }\n}","import { Injectable } from '@angular/core';\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from '../states/app.state';\nimport { LoginRequestedAction } from '../actions/auth.action';\n@Injectable()\nexport class AuthStoreService {    \n    constructor(private store: Store<AppState>) { }\n    public dispatchLoginAction(user) {\n        this.store.dispatch(new LoginRequestedAction(user))\n    }\n\n    public storeSelect() {\n        return this.store.select('authInfo')\n    }    \n}","import { Injectable } from '@angular/core';\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from '../states/app.state';\nimport { ListRequestedAction,ListAddRequestedAction,ListDeleteRequestedAction,ListUpdateRequestedAction } from '../actions/dashboard.action';\n@Injectable()\nexport class DashboardStoreService {    \n    constructor(private store: Store<AppState>) { }\n    public dispatchListAction(item) {\n        this.store.dispatch(new ListRequestedAction(item))\n    }\n    public dispatchListAddAction(item) {\n        this.store.dispatch(new ListAddRequestedAction(item))\n    }\n    public dispatchListDeleteAction(item) {\n        this.store.dispatch(new ListDeleteRequestedAction(item))\n    }\n    public dispatchListUpdateAction(item) {\n        this.store.dispatch(new ListUpdateRequestedAction(item))\n    }\n\n    public storeSelect() {\n        return this.store.select('dashboardInfo')\n    }    \n}","/**\n * This function coerces a string into a string literal type.\n * Using tagged union types in TypeScript 2.0, this enables\n * powerful typechecking of our reducers.\n *\n * Since every action label passes through this function it\n * is a good place to ensure all of our action labels\n * are unique.\n */\n\nconst typeCache:{ \n    [label: string]: boolean \n} = {};\n\nexport function type<T>(label: T | ''): T {\n    if (typeCache[<string>label]) {\n      throw new Error(`Action type \"${label}\" is not unique\"`);\n    }\n    typeCache[<string>label] = true;  \n    return <T>label;\n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url:'http://covid19.mathdro.id/api/',  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}